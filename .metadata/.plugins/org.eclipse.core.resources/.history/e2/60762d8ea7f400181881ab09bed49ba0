/**
 * 
 */
package com.wipro.wc.demo;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.log4j.Logger;
import org.jsoup.Connection;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;


/**
 * @author Subash
 *
 */
public class WebCrawlerServic {

	final static Logger logger = Logger.getLogger(WebCrawlerServic.class);

    public void runCrawler() {
		// TODO Auto-generated method stub
        List<String> urls = this.getUrlList();
        for (String url : urls) {
            this.scan(url);
        }
    }

    /**
     * @return List<String>
     */
    public List<String> getUrlList() {
        List<String> result = new ArrayList<String>();
        result.add("https://www.wiprodigital.com");
        
        
        
        return result;
    }

    /**
     * @param url
     */
    public void scan(String url) {
    	
    	
    	/**
         * This performs all the work. It makes an HTTP request, checks the response, and then gathers
         * up all the links on the page. Perform a searchForWord after the successful crawl
         * 
         * @param url
         *            - The URL to visit
         * @return whether or not the crawl was successful
         */
        Document doc = null;
        try {
        	
        	Connection connection = Jsoup.connect(url).userAgent(USER_AGENT);
             doc = connection.get();
             
             if(connection.response().statusCode() == 200) // 200 is the HTTP OK status code
                 // indicating that everything is great.
{
System.out.println("\n**Visiting** Received web page at " + url);
}
            //htmlDocument = Jsoup.connect(url).get();
        } catch (IOException e) {
            e.printStackTrace();
        }

        
        Elements links = doc.select(ICrawler.HREF_TAG);
        Elements media = doc.select(ICrawler.SRC_TAG);
        Elements imports = doc.select(ICrawler.LINK_TAG);

     /*   for (Element src : media) {
            if (src.tagName().equals("img")) {
            	System.out.println(" Tag name" +src.attr("abs:src"));
            }
            else {
            	
            }
            	System.out.println( src.attr("abs:src"));
        }
*/
       
       /* for (Element link : imports) {
        	System.out.println(link.attr("abs:href"));
        	
        	//System.out.println(link.attr("REEL"));
        	System.out.println(link.attr("rel"));
        }*/

       
        for (Element link : links) {
           // print(" * a: <%s>  (%s)", link.attr("abs:href"), trim(link.text(), 35));
        	
                System.out.println(link.text());
        	
              
        }

			

        try {
           // Files.append(log, new File(this.reportFile), Charsets.UTF_8);
        } catch (Exception e) {
            e.printStackTrace();
        }
        
       
    }

	
    public String getDomainName(String url){
		
    	String domainName = "";
    	matcher = patternDomainName.matcher(url);
    	if (matcher.find()) {
    		domainName = matcher.group(0).toLowerCase().trim();
    	}
    	System.out.println(domainName);
    	return domainName;
    		
      }	
	
	
	

}
