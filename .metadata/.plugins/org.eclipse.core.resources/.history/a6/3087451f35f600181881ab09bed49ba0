package com.wipro.wc.demo.utility;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStreamWriter;
import java.util.Iterator;
import java.util.Map;
import java.util.Properties;
import java.util.Set;

import org.apache.log4j.Logger;
import org.jsoup.Connection;

import com.wipro.wc.demo.WebCrawlerServic;
import com.wipro.wc.demo.exception.WebCrawlerException;

public class Utility {

	final static Logger logger = Logger.getLogger(WebCrawlerServic.class);

	public String DomainValidation(String DomainURL) {
		logger.info(" DomainValidation starts");

		if (DomainURL == null || DomainURL.isEmpty()) {
			logger.error("DomainURL is null or empty");
			throw new WebCrawlerException("Please Provide the Domain URL");
		}

		if (!DomainURL.startsWith("http") && !DomainURL.startsWith("https")) {
			DomainURL = "http://" + DomainURL;

		}

		logger.info(" DomainValidation Ends");
		return DomainURL;
	}

	public String getURLFromPropFile() throws IOException {

		logger.info(" getURLFromPropFile starts");
		InputStream inputStream;
		String Propvalue;
		try {
			Properties prop = new Properties();
			String propFileName = "URL.properties";

			inputStream = getClass().getClassLoader().getResourceAsStream(propFileName);

			if (inputStream != null) {
				prop.load(inputStream);
			} else {
				throw new FileNotFoundException("property file '" + propFileName + "' not found in the classpath");
			}
			// get the property value and print it out
			Propvalue = prop.getProperty("DOMAIN_URL");
			logger.info(" getURLFromPropFile Ends");
			return Propvalue;

		} catch (Exception e) {
			logger.error("Unable to read the property file");
			throw new WebCrawlerException("Please  verify the property file path" + e.toString());

		}

	}
	
	public static String sourceValidation(String source) {
		String valSourse="";
		
		if (!source.isEmpty() || source != null) {
			
			if(source.startsWith("https") || source.startsWith("http")){
				if(!source.equalsIgnoreCase("[]")){
					
					valSourse=source;
					return valSourse;
				}
			}
		}
		return source;
		
	}
	public static  void terminateConn(Connection connection) {
		
		connection.timeout(1);
		
	}
	public void URLFileWriter(Map contentMap) {
		try {
			if (contentMap == null  || contentMap.isEmpty()) {
				logger.error("no contents availale");
				throw new WebCrawlerException("Please provide anothe URL or the web site");
			}
			Set<String> contentImage=(Set<String>) contentMap.get("IMAGE");
			Set<String> contentLinks=(Set<String>) contentMap.get("LINKS");
			
		File fout = new File("output.txt");
		FileOutputStream fos = new FileOutputStream(fout);
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(fos));
	for (String content : contents) {
		bw.write(content);
		bw.newLine();
	}
		
		
			bw.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
}
